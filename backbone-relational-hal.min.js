/*!
 * backbone-relational-hal v0.1.0
 * Copyright (c) 2014 Simon Oulevay
 * Distributed under MIT license
 * https://github.com/AlphaHydrae/backbone-relational-hal
 */
!function(a,b,c,d){var e=a.Collection,f=a.RelationalModel,g=f.extend({href:function(a){a=b.extend({},a);var d=this.get("href");return this.get("templated")&&(d=new c(d),d=d.fillFromObject(a.template||{})),d}}),h=e.extend({model:g}),i=f.extend({parse:function(a){return b.reduce(a,function(a,c,d){return a[d]=b.isArray(c)?new h(c):new g(c),a},{})},link:function(a,c){c=b.extend({},c);var d=this.get(a);return d?d instanceof h?c.all?d:d.at(0):c.all?new h([d]):d:c.all?new h:null}}),j=f.extend({embedded:function(a){return this.get(a)}}),k=a.RelationalHalResource=f.extend({url:function(){return this.hasLink("self")?this.link("self").href():null},link:function(){var a=this.get("_links");return a?a.link.apply(a,Array.prototype.slice.call(arguments)):null},hasLink:function(a){return this.has("_links")&&this.get("_links").has(a)},embedded:function(){var a=this.get("_embedded");return a?a.embedded.apply(a,Array.prototype.slice.call(arguments)):null},hasEmbedded:function(a){return this.has("_embedded")&&this.get("_embedded").has(a)},hasSameUri:function(a){return a?this.link("self").href()==a.link("self").href():!1},isNew:function(){return!this.hasLink("self")}}),l=k.extend;k.extend=function(c){c=b.defaults({},c,{relations:[],halEmbedded:[]});var d=j.extend({relations:b.map(c.halEmbedded,function(a){return b.clone(a)})});return c.relations.push({type:a.HasOne,key:"_links",relatedModel:i,includeInJSON:!1,parse:!0}),c.relations.push({type:a.HasOne,key:"_embedded",relatedModel:d,includeInJSON:!1}),l.call(k,c)},a.fetchHalHref=function(e,f,g){g=g||d.Deferred();var h;if(f){if(!b.isObject(f._links))throw new Error("Expected source to have a links in the _links property, got "+JSON.stringify(f));var i=e.shift(),j=f._links[i.rel];if(!j)throw new Error("Expected source links to have a "+i.rel+" link, got "+b.keys(f._links).join(", "));if(!j.href)throw new Error("Expected source link "+i.rel+" to have an href property, got "+JSON.stringify(j));if(i.template&&!j.templated)throw new Error("Template parameters were given for link "+i.rel+" but it is not templated, got "+JSON.stringify(j));h=j.href,i.template&&(h=new c(h),h=h.fillFromObject(i.template))}else h=ApiPath.build();return e.length?(App.debug("Fetching HAL link "+e[0].rel+" from "+h),d.ajax({url:h,type:"GET",dataType:"json"}).done(function(b){a.fetchHalHref(e,b,g)}).fail(function(){g.reject("Could not GET "+h)}),g):(App.debug("HAL link is "+h),g.resolve(h),g)},a.originalSync=a.sync,a.sync=function(c,e,f){f=b.clone(f)||{};var g=null;try{g=f.url||b.result(e,"url")}catch(h){}var i=b.result(e,"halCachedUrl");if(i||e.halUrl||(i=b.result(e.collection,"halCachedUrl")),!g&&i&&(g=i,f.url=i),g)return a.originalSync.apply(a,Array.prototype.slice.call(arguments));var j=b.result(e,"halUrl"),k=e;if(j||(j=b.result(e.collection,"halUrl"),k=e.collection),!j)throw new Error("Model/collection must have url or halUrl.");f.attrs||(f.attrs=e.toJSON(f));var l=Array.prototype.slice.call(arguments),m=d.Deferred();return a.fetchHalHref(j.slice()).fail(b.bind(m.reject,m)).done(function(c){f.url=c,k.halCachedUrl=c,a.originalSync.apply(a,l).done(b.bind(m.resolve,m)).fail(b.bind(m.reject,m))}),m}}(Backbone,_,UriTemplate,$);